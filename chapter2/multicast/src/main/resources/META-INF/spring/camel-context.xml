<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file 
	distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under 
	the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to 
	in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
	ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under 
	the License. -->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean
		id="jms"
		class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property
					name="brokerURL"
					value="vm://localhost" />
			</bean>
		</property>
	</bean>

	<bean
		id="downloadLogger"
		class="otto.utils.DownloadLogger" />

	<bean
		id="messageLogger"
		class="otto.utils.MessageLogger" />

	<bean
		id="executor"
		class="java.util.concurrent.Executors"
		factory-method="newFixedThreadPool">
		<constructor-arg
			index="0"
			value="16" />
	</bean>

	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<route>
			<from uri="file:src/data?noop=true" />
			<process ref="downloadLogger" />
			<to uri="jms:incomingOrders" />
		</route>
		<route>
			<from uri="jms:incomingOrders" />
			<choice>
				<when>
					<simple>${header.CamelFileName} regex '^.*xml$'</simple>
					<to uri="jms:xmlOrders" />
				</when>
				<when>
					<simple>${header.CamelFileName} regex '^.*(csv|csl)$'</simple>
					<to uri="jms:csvOrders" />
				</when>
				<otherwise>
					<to uri="jms:badOrders" />
					<stop />
				</otherwise>
			</choice>
			<to uri="jms:continuedProcessing" />
		</route>
		<route>
			<from uri="jms:xmlOrders" />
			<multicast
				stopOnException="true"
				parallelProcessing="true"
				executorServiceRef="executor">
				<to uri="jms:accounting" />
				<to uri="jms:production" />
			</multicast>
		</route>		
		
		<route>
			<from uri="jms:accounting" />
			<log
				message="Retrieved message from jms:accounting: ${id} | ${header.CamelFileName} ${body}"
				loggingLevel="INFO"
				logName="com.mycompany.MyCoolRoute"
				marker="myMarker" />
			<process ref="downloadLogger" />
			<process ref="messageLogger" />
			<stop />
		</route>
		
		<route>
			<from uri="jms:production" />
			<log
				message="Retrieved message from jms:production ${id} | ${header.CamelFileName} ${body}"
				loggingLevel="INFO"
				logName="com.mycompany.MyCoolRoute"
				marker="myMarker" />
			<process ref="downloadLogger" />
			<process ref="messageLogger" />
			<stop />
		</route>
		
		
	</camelContext>

</beans>
